iOS面试题
#线程与进程的区别和联系？
&进程和线程都是由操作系统所体会的程序运行的基本单元，系统利用该基本单元实现系统对应用的并发性。进程和线程的主要差别在于它们是不同的操作系统资源管理方式。进程是有独立的地址空间，一个进程崩溃后，在保护模式下不会对其它进程产生影响，而线程只是一个进程中的不同执行路径。线程有自己的堆栈和局部变量，但线程之间没有单独的地址空间，一个线程死掉就等于整个进程死掉，所以多进程的程序要比多线程的程序健壮，但在进程切换时，耗费资源较大，效率要差一些。但对于一些要求同时进行并且又要共享某些变量的并发操作，只能用线程，不能用进程。
#堆和栈的区别？
&管理方式：对于栈来说，是由编译器自动管理，无需我们收手工控制；对于堆来说，释放工作由程序员控制，容易产生内存泄露。
    栈：向低地址扩展的数据结构，是一块连续的内存的区域。也就是栈顶的地址和栈的最大容量是系统预先规定好的。
#什么时候用delegate，什么时候用Notification？
&代理是1对1的关系，并且接受者可以返回值给发送者。
    通知可以是1对1，1对多，1对0；无法返回值给发送者，所以，代理用于发送者希望接受到接受者的某个功能反馈值，通知用回通知多个事件。
#属性关键字assign、retain、weak、copy
&Assign：用于基本数据类型和结构体。当销毁时，属性值不会自动置nil，可能造成野指针。
Weak：对象引用计数为0的时候，属性值会自动置为nil。
Retain：强引用类型，ARC下相当于strong，但block不能用retain，等同于assign不安全。
Strong：强引用类型，修饰block时相当于copy。
#iOS内存管理
&iOS下内存管理的基本思想就是引用计数，通过对象的引用计数来对内存对象的生命周期进行控制。具体到编程方面，主要有两种方式：
1.    MRC，人工引用计数，对象的生成、销毁、引用计数的变化都是由开发人员来完成。
2.    ARC，自动引用计数，只负责对象的生成，其他过程开发人员不再需要关心其销毁，使用方式类似于垃圾回收机制，但其实质还是引用计数。
#UIView和CALayer的区别？
&CALayer是继承NSobject，不能响应事件。
职责不同：
UIview的主要职责是负责接收并响应事件；而CALayer的主要职责是负责显示UI。
事件响应链：
对象继承与UIResponder的类，才能处理事件。
#Copy和mutableCopy的区别？
&Copy：浅拷贝，不拷贝对象本身，仅仅是拷贝对象的指针。
MutableCopy：深拷贝，是直接拷贝整个对象内存到另一块内存中。
#数据持久化有哪些？
&属性列表（plist）、数据归档（NSKeyedValueArchiver、NSuserDefaults）、数据库(sqlite)和coreData等。
#自己设计网络请求框架
&NSURLSession
#UIFrame，Bound？
&View.frame的意思是这个view在父视图本地参考坐标系（bounds）上的位置与大小。
View.bounds是这个view自身的本地参考坐标系（位置与大小）供其子视图使用。
#For、While循环有什么区别，如果提出Map对象里面的元素如何处理？
&For循环是指满足条件下，重复执行语句或代码段，可以知道循环的次数。
While循环只有条件是true，循环就可以一直执行下去。
#网络单元测试具体如何做？
&单元测试是以代码测试代码。不是靠 NSLog 来测试，而是使用断言来测试的，提前预判条件必须满足。XCTest是Xcode集成的一套单元测试框架。基本方法：setup（每个test方法执行前调用）、tearDown（每个test方法执行后调用）。
#class，static类方法，不想被子类化用什么关键字？
&@private私有的，修饰，除了类自己可用，子类都无法调用。
@protected修饰，自己跟子类皆可用。
@public公共的，只要你有这个类对象，就可以拿到public下的变量。
@package，主要用户框架类。
#
